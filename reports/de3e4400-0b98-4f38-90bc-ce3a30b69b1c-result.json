{"name": "test_automation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//button[@type='button'][normalize-space()='Send Email'])[1]\"}\n  (Session info: chrome=121.0.6167.185); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7E27C7012+3522402]\n\t(No symbol) [0x00007FF7E23E8352]\n\t(No symbol) [0x00007FF7E2295ABB]\n\t(No symbol) [0x00007FF7E22DBF0E]\n\t(No symbol) [0x00007FF7E22DC08C]\n\t(No symbol) [0x00007FF7E231E437]\n\t(No symbol) [0x00007FF7E22FF09F]\n\t(No symbol) [0x00007FF7E231BDA3]\n\t(No symbol) [0x00007FF7E22FEE03]\n\t(No symbol) [0x00007FF7E22CF4D4]\n\t(No symbol) [0x00007FF7E22D05F1]\n\tGetHandleVerifier [0x00007FF7E27F9B9D+3730157]\n\tGetHandleVerifier [0x00007FF7E284F02D+4079485]\n\tGetHandleVerifier [0x00007FF7E28475D3+4048163]\n\tGetHandleVerifier [0x00007FF7E251A649+718233]\n\t(No symbol) [0x00007FF7E23F4A3F]\n\t(No symbol) [0x00007FF7E23EFA94]\n\t(No symbol) [0x00007FF7E23EFBC2]\n\t(No symbol) [0x00007FF7E23DF2E4]\n\tBaseThreadInitThunk [0x00007FFEB0F97344+20]\n\tRtlUserThreadStart [0x00007FFEB2F826B1+33]", "trace": "self = <testCases.test_automation.TestAutomation object at 0x00000239C86A9370>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dab0663c03ef95fbba518b6a40d051f4\")>\n\n    def test_automation(self, setup):\n        self.driver = setup\n        self.driver.get(self.base_url)\n        self.login_page = LoginPage(self.driver)\n        self.dashboard = DashboardPage(self.driver)\n        self.create_guest_page = CreateNewGuestPage(self.driver)\n        self.create_invoice = CreateInvoicePage(self.driver)\n        self.invoice_page = InvoicesPage(self.driver)\n        self.setup = SetupPage(self.driver)\n        self.create_guest_page = CreateNewGuestPage(self.driver)\n        self.add_item = ItemsPage(self.driver)\n        self.item_type = ItemTypePage(self.driver)\n        self.terms = TermsPage(self.driver)\n        self.discount = DiscountPage(self.driver)\n        self.room_type = RoomTypePage(self.driver)\n        self.logs = LogsPage(self.driver)\n        self.reports = ReportsPage(self.driver)\n        self.access = AccessPage(self.driver)\n    \n        # Login\n        self.login_page.login_to_application(self.username, self.password)\n        sleep(MEDIUM_WAIT)\n    \n        # Dashboard\n        self.dashboard.click_hotel_drop_down_list()\n        sleep(MEDIUM_WAIT)\n        self.dashboard.select_date_range(\"2023/12/31\", \"2024/01/10\")\n        sleep(MEDIUM_WAIT)\n        # # alert = self.driver.switch_to.alert\n        # # alert.accept()\n        # # sleep(SHORT_WAIT)\n        # # self.dashboard.click_create_new_invoice()\n        # #\n        # Create New Guest\n        self.create_guest_page.click_create_new_invoice()\n        sleep(MEDIUM_WAIT)\n        self.create_guest_page.select_guest()\n        sleep(SHORT_WAIT)\n        self.create_guest_page.create_new_guest(CreateNewGuestTestData.first_name,\n                                                CreateNewGuestTestData.last_name,\n                                                CreateNewGuestTestData.email,\n                                                CreateNewGuestTestData.phone_number,\n                                                CreateNewGuestTestData.address_line_1,\n                                                CreateNewGuestTestData.address_line_2,\n                                                CreateNewGuestTestData.zip_code)\n        sleep(SHORT_WAIT)\n        self.create_invoice.create_new_payment_invoice(CreateNewPaymentInvoiceTestData.reservation_number,\n                                                       CreateNewPaymentInvoiceTestData.remark)\n        sleep(SHORT_WAIT)\n        self.create_invoice.select_item_from_dropdown()\n        sleep(SHORT_WAIT)\n        self.create_invoice.add_and_remove_item()\n        sleep(SHORT_WAIT)\n        self.create_invoice.select_discount()\n        sleep(SHORT_WAIT)\n        self.create_invoice.click_toggle()\n        sleep(MEDIUM_WAIT)\n        self.create_invoice.add_new_term()\n        sleep(MEDIUM_WAIT)\n        self.create_invoice.click_save_button()\n        sleep(MEDIUM_WAIT)\n>       self.create_invoice.click_send_email()\n\ntestCases\\test_automation.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\CreateInvoicePage.py:190: in click_send_email\n    self.click_element(\"button_send_email_xpath\", self.locator_invoice_page.button_send_email_xpath)\npageObjects\\BasePage.py:9: in click_element\n    element = self.get_element(locator_name, locator_value)\npageObjects\\BasePage.py:38: in get_element\n    element = self.driver.find_element(By.XPATH, locator_value)\n..\\..\\..\\PycharmProjects\\easypay-automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\PycharmProjects\\easypay-automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000239C86A97C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7E23DF2E4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEB0F97344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFEB2F826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//button[@type='button'][normalize-space()='Send Email'])[1]\"}\nE         (Session info: chrome=121.0.6167.185); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7E27C7012+3522402]\nE       \t(No symbol) [0x00007FF7E23E8352]\nE       \t(No symbol) [0x00007FF7E2295ABB]\nE       \t(No symbol) [0x00007FF7E22DBF0E]\nE       \t(No symbol) [0x00007FF7E22DC08C]\nE       \t(No symbol) [0x00007FF7E231E437]\nE       \t(No symbol) [0x00007FF7E22FF09F]\nE       \t(No symbol) [0x00007FF7E231BDA3]\nE       \t(No symbol) [0x00007FF7E22FEE03]\nE       \t(No symbol) [0x00007FF7E22CF4D4]\nE       \t(No symbol) [0x00007FF7E22D05F1]\nE       \tGetHandleVerifier [0x00007FF7E27F9B9D+3730157]\nE       \tGetHandleVerifier [0x00007FF7E284F02D+4079485]\nE       \tGetHandleVerifier [0x00007FF7E28475D3+4048163]\nE       \tGetHandleVerifier [0x00007FF7E251A649+718233]\nE       \t(No symbol) [0x00007FF7E23F4A3F]\nE       \t(No symbol) [0x00007FF7E23EFA94]\nE       \t(No symbol) [0x00007FF7E23EFBC2]\nE       \t(No symbol) [0x00007FF7E23DF2E4]\nE       \tBaseThreadInitThunk [0x00007FFEB0F97344+20]\nE       \tRtlUserThreadStart [0x00007FFEB2F826B1+33]\n\n..\\..\\..\\PycharmProjects\\easypay-automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1708312396418, "stop": 1708312696734, "uuid": "78759431-8de9-44b2-8815-990f532023a3", "historyId": "a66e3a33b23a0a42ec4adae5850b89ad", "testCaseId": "a66e3a33b23a0a42ec4adae5850b89ad", "fullName": "testCases.test_automation.TestAutomation#test_automation", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_automation"}, {"name": "subSuite", "value": "TestAutomation"}, {"name": "host", "value": "DESKTOP-678ACAQ"}, {"name": "thread", "value": "12396-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_automation"}]}